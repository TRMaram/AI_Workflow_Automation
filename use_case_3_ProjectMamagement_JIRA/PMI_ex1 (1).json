{
  "name": "PMI_ex1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nlet data = $input.all();\nreturn {data}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -40,
        0
      ],
      "id": "e6ffc480-4563-41aa-aff0-358355cf69fe",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a Project Analyst AI. Your task is to analyze structured weekly bug report data from an e-commerce project and generate a professional HTML report. This report will be converted into a PDF and shared with project stakeholders.\n\nüîç Input:\n\ndata_input: {{ $json.data.toJsonString() }}\n\nüéØ Objectives:\nGenerate a comprehensive weekly summary from the bug data. Organize the report into the following structured sections :\n\n‚úÖ Bugs Critiques R√©solus (using detailed table)\n\nüöß Avanc√©e du D√©veloppement (using detailed table)\n\nüìå Demandes PM (using detailed table)\n\nüõ†Ô∏è Charge Support (using detailed table)\n\nüìä Key Metrics (Include Embedded Charts):\nUse the HTTP Request node to generate various types of charts (e.g., bar, pie, line) for maximum insight. Each chart should be embedded directly in the HTML report at the relevant section.\n\nChart Types & Purposes:\n\nMetric\t| Suggested Chart Type\nTotal bugs vs resolved\t| Bar Chart\nBugs by status | (open, resolved, backlog)\tPie Chart\nWeekly bug resolution trend\t| Line Chart\nBug distribution by team (Alpha vs Beta)\t| Doughnut Chart\nBug types |\tHorizontal Bar Chart\n\nHTTP Request Body Format:\n\n{\n  \"chart\": {\n    \"type\": \"chart_type_here\",\n    \"data\": {\n      \"labels\": [\"Label1\", \"Label2\"],\n      \"datasets\": [\n        {\n          \"label\": \"Dataset Label\",\n          \"data\": [10, 20]\n        }\n      ]\n    }\n  }\n}\nReplace \"chart_type_here\" with the appropriate type (e.g., \"bar\", \"pie\", \"line\"), and dynamically fill in labels and data based on the analysis.\n\n\n\nüìà Trends & Insights:\nAnalyze the input data to extract insights such as:\n\nAre bug counts increasing or decreasing compared to last week?\n(If historical data is unavailable, comment on resolution progress.)\n\nIdentify common bug types (e.g., payment, UI, sync issues)\n\nWhich team resolved more bugs?\n\nAre Product Manager requests being addressed effectively?\n\nüß© Milestones & Highlights:\nHighlight critical bugs resolved this week and their business impact\n\nFlag any ongoing blockers or high-impact open issues\n\nNote improvements in feature stability or customer experience\n\nüìå Suggested Focus for Next Week:\nRecommend areas that require more attention (e.g., payment flow, performance)\n\nSuggest bug priorities based on:\n\nüìä Frequency\n\nüíº Business Impact\n\n‚è±Ô∏è Stakeholder Urgency\n\n‚úçÔ∏è Formatting Guidelines:\nOutput a clean, readable HTML report\n\nUse clear section headers, bullet points, tables, and embedded charts\n\nMaintain a professional, concise tone suitable for both executives and technical teams\n\nBegin the report with a well-written Executive Summary\n\nüìÑ Output Instructions:\nReturn only the fully formatted HTML report.\n",
        "options": {
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        220,
        0
      ],
      "id": "1056fb5d-58a5-4dec-b489-1af0b577cd2b",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        180
      ],
      "id": "8e99382b-7ebf-4e2d-8bbc-f0b052892d3e",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "dYZWfaOXMEhGY7FU",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "maramtrabelsi1212@gmail.com",
        "subject": "Report",
        "message": "={{ $('HTML').item.json.html }}{{ $json.Files[0].Url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1100,
        240
      ],
      "id": "bf11e39b-f785-4149-bb83-5b3cd2ed1e95",
      "name": "Gmail",
      "webhookId": "c503e5f6-dbcb-4472-b03a-eb17a48a5306",
      "credentials": {
        "gmailOAuth2": {
          "id": "XHVTWlMqhoM5pQnc",
          "name": "Gmail account 6"
        }
      }
    },
    {
      "parameters": {
        "content": "## Response from Tool 'QuickChart1' included binary data, which is not supported in Agents. The binary data was omitted from the response.\n",
        "height": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1440,
        -420
      ],
      "typeVersion": 1,
      "id": "a5f45401-0218-444a-9db7-95726b7938ba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://quickchart.io/chart/create",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', ``, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        440,
        160
      ],
      "id": "bbea291f-5f15-4b77-83f8-63d32ee9e1a7",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -460,
        0
      ],
      "id": "e9c108f8-4a40-482e-98d9-c59574618760",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1_-WKQKrKplS0sVaJFnqRGp3c64FF2L1nFBqqi5Oyjho",
          "mode": "list",
          "cachedResultName": "Converted_Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_-WKQKrKplS0sVaJFnqRGp3c64FF2L1nFBqqi5Oyjho/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2050027101,
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_-WKQKrKplS0sVaJFnqRGp3c64FF2L1nFBqqi5Oyjho/edit#gid=2050027101"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -280,
        0
      ],
      "id": "81f02215-e693-4dfb-bfda-74108f9ea47d",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PTl7gTewqx3wMQLJ",
          "name": "Google Sheets account 3"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.convertapi.com/convert/html/to/pdf",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer PkRk3XkwSeRy8t2ltaBjBhqnzCZtkmVx"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "StoreFile",
              "value": "true"
            },
            {
              "parameterType": "formBinaryData",
              "name": "File",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        0
      ],
      "id": "4573caad-abeb-4cb4-80bb-a78a47003ca3",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "let file = $input.first().json.output.replaceAll(\"```html\",\"\").replaceAll(\"```\",\"\").replaceAll(\"\\n\",\"\");\n\nreturn {file};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        0
      ],
      "id": "91841940-df36-45a6-ae2c-4cb691b81c4f",
      "name": "Code1"
    },
    {
      "parameters": {
        "html": "{{ $json.file }}"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        840,
        0
      ],
      "id": "4cdcc88e-d162-48e8-823e-cd351182dfe0",
      "name": "HTML"
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "html",
        "options": {
          "fileName": "index.html",
          "mimeType": "text/html",
          "useRawData": true
        }
      },
      "id": "8adbaf60-4922-4c8d-a95e-6ef4cd82cad0",
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        1040,
        0
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c24f42f5-739d-46ce-96e5-efc66127c6a2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "eda11f78dc41be1aa2e6362cde9ae6dd4b7bbe5c2c22874197c6fa1fa408e45b"
  },
  "id": "hO9bmp478lmbmDuC",
  "tags": []
}